{"version":3,"sources":["./src/app/quote/quote.module.ts","./src/app/quote/components/quote-preview/quote-preview.component.html","./src/app/quote/components/quote-preview/quote-preview.component.ts","./src/app/quote/quote-routing.module.ts","./src/app/quote/components/quote-container/quote-container.component.ts","./src/app/quote/components/quote-container/quote-container.component.html","./src/app/quote/components/quote/quote.component.html","./src/app/quote/components/quote/quote.component.ts","./src/app/quote/components/quote-share-modal/quote-share-modal.component.ts","./src/app/quote/components/quote-share-modal/quote-share-modal.component.html","./src/app/quote/components/share-form/share-form.component.ts","./src/app/quote/components/share-form/share-form.component.html","./src/app/quote/components/index.ts"],"names":[],"mappings":"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","file":"quote-quote-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport {\n  QuoteComponent,\n  QuoteContainerComponent,\n  QuotePreviewComponent,\n  QuoteShareModalComponent,\n  ShareFormComponent,\n} from './components';\nimport { QuoteRoutingModule } from './quote-routing.module';\n\nconst COMPONENTS = [\n  QuoteContainerComponent,\n  QuoteComponent,\n  QuoteShareModalComponent,\n  QuotePreviewComponent,\n  ShareFormComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    QuoteRoutingModule,\n    SharedModule,\n  ],\n})\nexport class QuoteModule {\n}\n","<blockquote *ngIf=\"quote\">\n  <strong>{{ quote.text }}</strong>\n  <cite>&nbsp;&copy;&nbsp;<em>{{ quote.author }}</em></cite>\n</blockquote>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Quote } from '../../../models';\n\n@Component({\n  selector: 'app-quote-preview',\n  templateUrl: './quote-preview.component.html',\n  styleUrls: [ './quote-preview.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuotePreviewComponent {\n  @Input() quote: Quote;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuoteContainerComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuoteContainerComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class QuoteRoutingModule { }\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, HostListener, OnDestroy, OnInit } from '@angular/core';\n\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\nimport { BehaviorSubject, combineLatest, Observable, of, race, Subject } from 'rxjs';\nimport {\n  delay,\n  filter,\n  share,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\n\nimport { Quote } from '../../../models';\nimport { QuoteService } from '../../../services';\nimport { QuoteShareModalComponent } from '../quote-share-modal/quote-share-modal.component';\nimport { ModalIds } from '../view.models';\n\n@Component({\n  selector: 'app-quote-container',\n  templateUrl: './quote-container.component.html',\n  styleUrls: [ './quote-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('isClicked', [\n      state('isClicked', style({ transform: 'rotate(360deg)' })),\n      transition('* => isClicked', animate('300ms ease-out')),\n    ]),\n  ],\n})\nexport class QuoteContainerComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  private isRefreshBtnClicked$$ = new BehaviorSubject<boolean>(false);\n  isRefreshBtnClicked$ = this.isRefreshBtnClicked$$.asObservable().pipe(share());\n\n  quote$: Observable<Quote> = this.quoteService.quote$;\n  isLoading$ = this.quoteService.isLoading$;\n\n  @HostListener('dblclick')\n  handleDoubleClick() {\n    this.getRandomQuote();\n  }\n\n  constructor(\n    private quoteService: QuoteService,\n    private modalService: NgxSmartModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.quoteService.getRandom().pipe(take(1)).subscribe();\n\n    this.quote$.pipe(\n      takeUntil(this.destroy$),\n      delay(300),\n      tap(() => this.isRefreshBtnClicked$$.next(false)),\n    ).subscribe();\n\n    this.isRefreshBtnClicked$.pipe(\n      takeUntil(this.destroy$),\n      filter(Boolean),\n      switchMap(() => this.quoteService.getRandom()),\n    ).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getRandomQuote(): void {\n    this.isRefreshBtnClicked$$.next(true);\n  }\n\n  openShareModal(quote: Quote): void {\n    this.listenToShareModalEvents(this.createAndOpenShareModalWithData(quote));\n  }\n\n  private createAndOpenShareModalWithData(quote: Quote): NgxSmartModalComponent {\n    return this.modalService\n      .create<QuoteShareModalComponent>(ModalIds.quoteShare, QuoteShareModalComponent, {\n      customClass: 'share-modal',\n    })\n      .setData({ quote })\n      .open();\n  }\n\n  private listenToShareModalEvents(modal: NgxSmartModalComponent): void {\n    // Listen to modal result\n    combineLatest([\n      modal.onClose,\n      modal.onDataAdded,\n    ]).pipe(\n      switchMap(([ , data ]: [ any, any ]) => {\n        if (data) {\n          const { quote, email, phone } = data;\n\n          return this.quoteService.share(quote, email ? { email } : { phone });\n        }\n\n        return of(null);\n      }),\n      take(1),\n    ).subscribe();\n\n    // Destroy modal after its close/dismiss to not duplicate its instances within modalService\n    race(\n      modal.onCloseFinished,\n      modal.onDismissFinished,\n    )\n      .pipe(\n        take(1),\n        tap(() => this.modalService.removeModal(ModalIds.quoteShare)),\n      ).subscribe();\n  }\n}\n","<ng-container *ngIf=\"(quote$ | async) as quote; else loader\">\n  <ng-container *ngIf=\"!(isLoading$ | async); else loader\">\n    <app-quote [quote]=\"quote\"></app-quote>\n\n    <div class=\"quote-actions\">\n      <button\n        class=\"get-quote-btn\"\n        title=\"Get another Quote\"\n        [@isClicked]=\"(isRefreshBtnClicked$ | async) ? 'isClicked' : ''\"\n        (click)=\"getRandomQuote()\"\n      ></button>\n\n      <button\n        class=\"share-quote-btn\"\n        title=\"Share\"\n        (click)=\"openShareModal(quote)\"\n      ></button>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #loader>\n  <app-loader></app-loader>\n</ng-template>\n\n\n","<ng-container *ngIf=\"quote\">\n  <div class=\"quote\">\n      <blockquote class=\"quote__blockquote\">\n        <p>\n          {{ quote.text }}\n        </p>\n        <cite>&copy;{{ quote.author }}</cite>\n      </blockquote>\n  </div>\n</ng-container>\n\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Quote } from '../../../models';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: [ './quote.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class QuoteComponent {\n  @Input() quote: Quote;\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\n\nimport { ContactData, Quote } from '../../../models';\nimport { ModalIds } from '../view.models';\n\n@Component({\n  selector: 'app-share-modal',\n  templateUrl: './quote-share-modal.component.html',\n  styleUrls: [ './quote-share-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteShareModalComponent implements OnInit {\n  private modal: NgxSmartModalComponent;\n  quote: Quote;\n\n  constructor(\n    private modalService: NgxSmartModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.modal = this.modalService.get(ModalIds.quoteShare);\n\n    const { quote } = this.modal.getData();\n    this.quote = quote;\n  }\n\n  onShareSubmit(contactData: ContactData): void {\n    this.modal.setData({ quote: this.quote, ...contactData }, true);\n    this.modal.close();\n  }\n\n  onShareCancel(): void {\n    this.modal.setData(null, true);\n    this.modal.close();\n  }\n\n}\n","<app-quote-preview [quote]=\"quote\"></app-quote-preview>\n\n<app-share-form\n  (shareSubmit)=\"onShareSubmit($event)\"\n  (shareCancel)=\"onShareCancel()\"\n></app-share-form>\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { ShareOption } from '../view.models';\n\n// eslint-disable-next-line max-len\nconst EMAIL_REG_EX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n@Component({\n  selector: 'app-share-form',\n  templateUrl: './share-form.component.html',\n  styleUrls: [ './share-form.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShareFormComponent implements OnInit {\n  shareOptions: ShareOption[] = [\n    {\n      type: 'email',\n      inputType: 'email',\n      title: 'Email',\n      placeholder: 'email@example.com',\n      validators: [\n        Validators.required,\n        Validators.pattern(EMAIL_REG_EX),\n      ],\n    },\n    {\n      type: 'phone',\n      inputType: 'tel',\n      title: 'Phone',\n      placeholder: '+380999998877',\n      validators: [ Validators.required, Validators.maxLength(15) ],\n    },\n  ];\n  selectedShareOption = this.shareOptions[ 0 ];\n  shareFormControl: FormControl;\n  form: FormGroup;\n\n  @Output() shareSubmit = new EventEmitter<any>();\n  @Output() shareCancel = new EventEmitter<any>();\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n    this.selectShareOption(this.selectedShareOption);\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      [ 'share' ]: this.shareFormControl,\n    });\n  }\n\n  selectShareOption(shareOption: ShareOption): void {\n    this.selectedShareOption = shareOption;\n\n    if (this.shareFormControl) {\n      this.form.controls[ 'share' ].setValidators(shareOption.validators);\n      this.shareFormControl.setValue('');\n\n      return;\n    }\n\n    this.shareFormControl = new FormControl('', shareOption.validators);\n  }\n\n  isShareOptionActive(shareOption: ShareOption): boolean {\n    return this.selectedShareOption === shareOption;\n  }\n\n  submit(): void {\n    if (!this.isShareFormValid) {\n      return;\n    }\n\n    this.shareSubmit.emit({ [ this.selectedShareOption.type ]: this.shareFormControl.value });\n  }\n\n  dismiss(): void {\n    this.shareCancel.emit();\n  }\n\n  get isShareFormValid() {\n    return this.shareFormControl && this.shareFormControl.valid;\n  }\n\n}\n","<div class=\"share-form-wrapper\">\n  <div class=\"toggler-wrapper\">\n    <label>Share via:&nbsp;</label>\n    <div class=\"toggler-wrapper-options\">\n      <ng-container *ngFor=\"let shareOption of shareOptions\">\n        <app-button\n          (clicked)=\"selectShareOption(shareOption)\"\n          [label]=\"shareOption.title\"\n          [class.active]=\"isShareOptionActive(shareOption)\"\n        >\n        </app-button>\n      </ng-container>\n    </div>\n    <br/>\n  </div>\n\n  <div class=\"form-control-wrapper\" *ngIf=\"selectedShareOption\">\n    <ng-container [formGroup]=\"form\">\n      <label>\n        <app-input\n          [id]=\"'share'\"\n          [type]=\"selectedShareOption.inputType\"\n          [form]=\"form\"\n          [placeholder]=\"selectedShareOption.placeholder\"\n        >\n        </app-input>\n      </label>\n    </ng-container>\n  </div>\n</div>\n<div class=\"button-wrapper\">\n  <app-button\n    type=\"submit\"\n    [disabled]=\"!isShareFormValid\"\n    [label]=\"'Send'\"\n    (clicked)=\"submit()\"\n  >\n  </app-button>\n  <app-button\n    [class]=\"'cancel-btn'\"\n    [label]=\"'Dismiss'\"\n    (clicked)=\"dismiss()\"\n  >\n  </app-button>\n</div>\n","export * from './quote/quote.component';\nexport * from './quote-container/quote-container.component';\nexport * from './quote-share-modal/quote-share-modal.component';\nexport * from './quote-preview/quote-preview.component';\nexport * from './share-form/share-form.component';\n"],"sourceRoot":"webpack:///"}