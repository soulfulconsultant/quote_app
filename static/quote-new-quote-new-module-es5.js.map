{"version":3,"sources":["webpack:///src/app/quote-new/components/quote-new-container/quote-new-container.component.ts","webpack:///src/app/quote-new/components/quote-new-container/quote-new-container.component.html","webpack:///src/app/quote-new/quote-new.module.ts","webpack:///src/app/quote-new/quote-new-routing.module.ts","webpack:///src/app/quote-new/components/index.ts"],"names":["QuoteNewContainerComponent","quoteService","router","isLoading$","quote","create","pipe","navigate","quotes","subscribe","COMPONENTS","QuoteNewModule","routes","path","component","QuoteNewRoutingModule","forChild"],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACHA;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;;;;;AAGE;;;;UDQWA,0B;AAGX,4CACUC,YADV,EAEUC,MAFV,EAEwB;AAAA;;AADd,eAAAD,YAAA,GAAAA,YAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAJV,eAAAC,UAAA,GAAa,KAAKF,YAAL,CAAkBE,UAA/B;AAKK;;;;iBAEL,oBAAQ,CACP;;;iBAED,qBAAYC,KAAZ,EAA0B;AAAA;;AACxB,iBAAKH,YAAL,CAAkBI,MAAlB,CAAyBD,KAAzB,EAAgCE,IAAhC,CACE,4DAAK,CAAL,CADF,EAEE,2DAAI;AAAA,qBAAM,KAAI,CAACJ,MAAL,CAAYK,QAAZ,CAAqB,CAAE,gEAAYC,MAAd,CAArB,CAAN;AAAA,aAAJ,CAFF,EAGEC,SAHF;AAID;;;;;;;yBAhBUT,0B,EAA0B,uH,EAAA,uH;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA,gB;AAAA,e;AAAA,2F;AAAA;AAAA;ACfvC;;;;AAMA;;;;;;AALG,+JAA4B,UAA5B,EAA4B,GAA5B;;;;;;;;;;;;;;;;;;;;;;;ACDH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMU,UAAU,GAAG,CACjB,sEADiB,CAAnB;;UAcaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBANhB,CACP,4DADO,EAEP,kEAFO,EAGP,+EAHO,CAMgB;;;;4HAAdA,c,EAAc;AAAA,yBAbzB,sEAayB;AAbC,oBAQxB,4DARwB,EASxB,kEATwB,EAUxB,+EAVwB;AAaD,S;AAHF,O;;;;;;;;;;;;;;;;;ACjBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,KADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,qB;;;;;cAAAA;;;;2BAAAA,qB;AAAqB,S;AAAA,kBAHvB,CAAE,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAF,CAGuB,EAFrB,4DAEqB;;;;4HAArBG,qB,EAAqB;AAAA;AAAA,oBAFrB,4DAEqB;AAAA,S;AAFT,O;;;;;;;;;;;;;;;;;ACdzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA","file":"quote-new-quote-new-module-es5.js","sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { take, tap } from 'rxjs/operators';\n\nimport { RoutesPaths } from '../../../app-routing.config';\nimport { Quote } from '../../../models';\nimport { QuoteService } from '../../../services';\n\n@Component({\n  selector: 'app-quote-new-container',\n  templateUrl: './quote-new-container.component.html',\n  styleUrls: [ './quote-new-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteNewContainerComponent implements OnInit {\n  isLoading$ = this.quoteService.isLoading$;\n\n  constructor(\n    private quoteService: QuoteService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  createQuote(quote: Quote) {\n    this.quoteService.create(quote).pipe(\n      take(1),\n      tap(() => this.router.navigate([ RoutesPaths.quotes ])),\n    ).subscribe();\n  }\n\n}\n","<app-quote-edit-form\n  *ngIf=\"!(isLoading$ | async) else loader\"\n  (submitted)=\"createQuote($event)\"\n>\n</app-quote-edit-form>\n\n<ng-template #loader>\n  <app-loader></app-loader>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { QuoteNewContainerComponent } from './components';\nimport { QuoteNewRoutingModule } from './quote-new-routing.module';\n\nconst COMPONENTS = [\n  QuoteNewContainerComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    QuoteNewRoutingModule,\n  ],\n})\nexport class QuoteNewModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuoteNewContainerComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: 'new',\n    component: QuoteNewContainerComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class QuoteNewRoutingModule { }\n","export * from './quote-new-container/quote-new-container.component';\n"]}