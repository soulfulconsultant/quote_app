{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/components/login/login.component.ts","webpack:///src/app/auth/components/login/login.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/components/index.ts","webpack:///src/app/auth/components/login-form/login-form.component.ts","webpack:///src/app/auth/components/login-form/login-form.component.html"],"names":["routes","path","component","AuthRoutingModule","forChild","LoginComponent","COMPONENTS","AuthModule","LoginFormComponent","fb","authService","activatedRoute","router","isLoading$","authDataValue","navigate","loginForm","group","required","minLength","returnUrl","snapshot","queryParams","userData","value","login","pipe","subscribe"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AuthRoutingModule { }\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: [ './login.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {}\n","<app-login-form></app-login-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent, LoginFormComponent } from './components';\n\nconst COMPONENTS = [\n  LoginComponent,\n  LoginFormComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AuthRoutingModule,\n  ],\n})\nexport class AuthModule { }\n","export * from './login/login.component';\nexport * from './login-form/login-form.component';\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { take, tap } from 'rxjs/operators';\n\nimport { AuthService } from '../../services';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: [ './login-form.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n  isLoading$ = this.authService.isLoading$;\n\n  private returnUrl: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n  ) {\n    if (this.authService.authDataValue) {\n      this.router.navigate([ '/' ]);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      'username': new FormControl('', Validators.required),\n      'password': new FormControl('', [ Validators.required, Validators.minLength(6) ]),\n    });\n\n    this.returnUrl = this.activatedRoute.snapshot.queryParams[ 'returnUrl' ] || '/';\n  }\n\n  onSubmit(): void {\n    const userData = this.loginForm.value;\n\n    this.authService.login(userData).pipe(\n      take(1),\n      tap(() => this.router.navigate([ this.returnUrl ])),\n    ).subscribe();\n  }\n}\n","<div\n  *ngIf=\"!(isLoading$ | async) else loader\"\n  class=\"login-form-wrapper\"\n  [formGroup]=\"loginForm\"\n>\n  <app-input\n    label=\"Username\"\n    id=\"username\"\n    [form]=\"loginForm\"\n  ></app-input>\n  <app-input\n    label=\"Password\"\n    type=\"password\"\n    id=\"password\"\n    [form]=\"loginForm\"\n  ></app-input>\n  <app-button\n    label=\"Login\"\n    [disabled]=\"loginForm.invalid\"\n    (clicked)=\"onSubmit()\"\n  ></app-button>\n</div>\n\n<ng-template #loader>\n  <app-loader></app-loader>\n</ng-template>\n"]}