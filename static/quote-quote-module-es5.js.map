{"version":3,"sources":["webpack:///src/app/quote/quote.module.ts","webpack:///src/app/quote/components/quote-preview/quote-preview.component.html","webpack:///src/app/quote/components/quote-preview/quote-preview.component.ts","webpack:///src/app/quote/quote-routing.module.ts","webpack:///src/app/quote/components/quote-container/quote-container.component.ts","webpack:///src/app/quote/components/quote-container/quote-container.component.html","webpack:///src/app/quote/components/quote/quote.component.html","webpack:///src/app/quote/components/quote/quote.component.ts","webpack:///src/app/quote/components/quote-share-modal/quote-share-modal.component.ts","webpack:///src/app/quote/components/quote-share-modal/quote-share-modal.component.html","webpack:///src/app/quote/components/share-form/share-form.component.ts","webpack:///src/app/quote/components/share-form/share-form.component.html","webpack:///src/app/quote/components/index.ts"],"names":["COMPONENTS","QuoteModule","QuotePreviewComponent","routes","path","component","QuoteRoutingModule","forChild","QuoteContainerComponent","quoteService","modalService","destroy$","isRefreshBtnClicked$$","isRefreshBtnClicked$","asObservable","pipe","quote$","isLoading$","getRandomQuote","getRandom","subscribe","next","Boolean","complete","quote","listenToShareModalEvents","createAndOpenShareModalWithData","create","quoteShare","customClass","setData","open","modal","onClose","onDataAdded","data","email","phone","share","onCloseFinished","onDismissFinished","removeModal","transform","QuoteComponent","QuoteShareModalComponent","get","getData","contactData","close","onShareSubmit","onShareCancel","EMAIL_REG_EX","ShareFormComponent","fb","shareOptions","type","inputType","title","placeholder","validators","required","pattern","maxLength","selectedShareOption","shareSubmit","shareCancel","selectShareOption","form","group","shareFormControl","shareOption","controls","setValidators","setValue","isShareFormValid","emit","value","valid","submit","dismiss"],"mappings":"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","file":"quote-quote-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport {\n  QuoteComponent,\n  QuoteContainerComponent,\n  QuotePreviewComponent,\n  QuoteShareModalComponent,\n  ShareFormComponent,\n} from './components';\nimport { QuoteRoutingModule } from './quote-routing.module';\n\nconst COMPONENTS = [\n  QuoteContainerComponent,\n  QuoteComponent,\n  QuoteShareModalComponent,\n  QuotePreviewComponent,\n  ShareFormComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    QuoteRoutingModule,\n    SharedModule,\n  ],\n})\nexport class QuoteModule {\n}\n","<blockquote *ngIf=\"quote\">\n  <strong>{{ quote.text }}</strong>\n  <cite>&nbsp;&copy;&nbsp;<em>{{ quote.author }}</em></cite>\n</blockquote>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Quote } from '../../../models';\n\n@Component({\n  selector: 'app-quote-preview',\n  templateUrl: './quote-preview.component.html',\n  styleUrls: [ './quote-preview.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuotePreviewComponent {\n  @Input() quote: Quote;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuoteContainerComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuoteContainerComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class QuoteRoutingModule { }\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, HostListener, OnDestroy, OnInit } from '@angular/core';\n\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\nimport { BehaviorSubject, combineLatest, Observable, of, race, Subject } from 'rxjs';\nimport {\n  delay,\n  filter,\n  share,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\n\nimport { Quote } from '../../../models';\nimport { QuoteService } from '../../../services';\nimport { QuoteShareModalComponent } from '../quote-share-modal/quote-share-modal.component';\nimport { ModalIds } from '../view.models';\n\n@Component({\n  selector: 'app-quote-container',\n  templateUrl: './quote-container.component.html',\n  styleUrls: [ './quote-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('isClicked', [\n      state('isClicked', style({ transform: 'rotate(360deg)' })),\n      transition('* => isClicked', animate('300ms ease-out')),\n    ]),\n  ],\n})\nexport class QuoteContainerComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  private isRefreshBtnClicked$$ = new BehaviorSubject<boolean>(false);\n  isRefreshBtnClicked$ = this.isRefreshBtnClicked$$.asObservable().pipe(share());\n\n  quote$: Observable<Quote> = this.quoteService.quote$;\n  isLoading$ = this.quoteService.isLoading$;\n\n  @HostListener('dblclick')\n  handleDoubleClick() {\n    this.getRandomQuote();\n  }\n\n  constructor(\n    private quoteService: QuoteService,\n    private modalService: NgxSmartModalService,\n  ) {}\n\n  ngOnInit(): void {\n    this.quoteService.getRandom().pipe(take(1)).subscribe();\n\n    this.quote$.pipe(\n      takeUntil(this.destroy$),\n      delay(300),\n      tap(() => this.isRefreshBtnClicked$$.next(false)),\n    ).subscribe();\n\n    this.isRefreshBtnClicked$.pipe(\n      takeUntil(this.destroy$),\n      filter(Boolean),\n      switchMap(() => this.quoteService.getRandom()),\n    ).subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getRandomQuote(): void {\n    this.isRefreshBtnClicked$$.next(true);\n  }\n\n  openShareModal(quote: Quote): void {\n    this.listenToShareModalEvents(this.createAndOpenShareModalWithData(quote));\n  }\n\n  private createAndOpenShareModalWithData(quote: Quote): NgxSmartModalComponent {\n    return this.modalService\n      .create<QuoteShareModalComponent>(ModalIds.quoteShare, QuoteShareModalComponent, {\n      customClass: 'share-modal',\n    })\n      .setData({ quote })\n      .open();\n  }\n\n  private listenToShareModalEvents(modal: NgxSmartModalComponent): void {\n    // Listen to modal result\n    combineLatest([\n      modal.onClose,\n      modal.onDataAdded,\n    ]).pipe(\n      switchMap(([ , data ]: [ any, any ]) => {\n        if (data) {\n          const { quote, email, phone } = data;\n\n          return this.quoteService.share(quote, email ? { email } : { phone });\n        }\n\n        return of(null);\n      }),\n      take(1),\n    ).subscribe();\n\n    // Destroy modal after its close/dismiss to not duplicate its instances within modalService\n    race(\n      modal.onCloseFinished,\n      modal.onDismissFinished,\n    )\n      .pipe(\n        take(1),\n        tap(() => this.modalService.removeModal(ModalIds.quoteShare)),\n      ).subscribe();\n  }\n}\n","<ng-container *ngIf=\"(quote$ | async) as quote; else loader\">\n  <ng-container *ngIf=\"!(isLoading$ | async); else loader\">\n    <app-quote [quote]=\"quote\"></app-quote>\n\n    <div class=\"quote-actions\">\n      <button\n        class=\"get-quote-btn\"\n        title=\"Get another Quote\"\n        [@isClicked]=\"(isRefreshBtnClicked$ | async) ? 'isClicked' : ''\"\n        (click)=\"getRandomQuote()\"\n      ></button>\n\n      <button\n        class=\"share-quote-btn\"\n        title=\"Share\"\n        (click)=\"openShareModal(quote)\"\n      ></button>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #loader>\n  <app-loader></app-loader>\n</ng-template>\n\n\n","<ng-container *ngIf=\"quote\">\n  <div class=\"quote\">\n      <blockquote class=\"quote__blockquote\">\n        <p>\n          {{ quote.text }}\n        </p>\n        <cite>&copy;{{ quote.author }}</cite>\n      </blockquote>\n  </div>\n</ng-container>\n\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Quote } from '../../../models';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: [ './quote.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class QuoteComponent {\n  @Input() quote: Quote;\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\n\nimport { ContactData, Quote } from '../../../models';\nimport { ModalIds } from '../view.models';\n\n@Component({\n  selector: 'app-share-modal',\n  templateUrl: './quote-share-modal.component.html',\n  styleUrls: [ './quote-share-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteShareModalComponent implements OnInit {\n  private modal: NgxSmartModalComponent;\n  quote: Quote;\n\n  constructor(\n    private modalService: NgxSmartModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.modal = this.modalService.get(ModalIds.quoteShare);\n\n    const { quote } = this.modal.getData();\n    this.quote = quote;\n  }\n\n  onShareSubmit(contactData: ContactData): void {\n    this.modal.setData({ quote: this.quote, ...contactData }, true);\n    this.modal.close();\n  }\n\n  onShareCancel(): void {\n    this.modal.setData(null, true);\n    this.modal.close();\n  }\n\n}\n","<app-quote-preview [quote]=\"quote\"></app-quote-preview>\n\n<app-share-form\n  (shareSubmit)=\"onShareSubmit($event)\"\n  (shareCancel)=\"onShareCancel()\"\n></app-share-form>\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { ShareOption } from '../view.models';\n\n// eslint-disable-next-line max-len\nconst EMAIL_REG_EX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n@Component({\n  selector: 'app-share-form',\n  templateUrl: './share-form.component.html',\n  styleUrls: [ './share-form.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShareFormComponent implements OnInit {\n  shareOptions: ShareOption[] = [\n    {\n      type: 'email',\n      inputType: 'email',\n      title: 'Email',\n      placeholder: 'email@example.com',\n      validators: [\n        Validators.required,\n        Validators.pattern(EMAIL_REG_EX),\n      ],\n    },\n    {\n      type: 'phone',\n      inputType: 'tel',\n      title: 'Phone',\n      placeholder: '+380999998877',\n      validators: [ Validators.required, Validators.maxLength(15) ],\n    },\n  ];\n  selectedShareOption = this.shareOptions[ 0 ];\n  shareFormControl: FormControl;\n  form: FormGroup;\n\n  @Output() shareSubmit = new EventEmitter<any>();\n  @Output() shareCancel = new EventEmitter<any>();\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n    this.selectShareOption(this.selectedShareOption);\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      [ 'share' ]: this.shareFormControl,\n    });\n  }\n\n  selectShareOption(shareOption: ShareOption): void {\n    this.selectedShareOption = shareOption;\n\n    if (this.shareFormControl) {\n      this.form.controls[ 'share' ].setValidators(shareOption.validators);\n      this.shareFormControl.setValue('');\n\n      return;\n    }\n\n    this.shareFormControl = new FormControl('', shareOption.validators);\n  }\n\n  isShareOptionActive(shareOption: ShareOption): boolean {\n    return this.selectedShareOption === shareOption;\n  }\n\n  submit(): void {\n    if (!this.isShareFormValid) {\n      return;\n    }\n\n    this.shareSubmit.emit({ [ this.selectedShareOption.type ]: this.shareFormControl.value });\n  }\n\n  dismiss(): void {\n    this.shareCancel.emit();\n  }\n\n  get isShareFormValid() {\n    return this.shareFormControl && this.shareFormControl.valid;\n  }\n\n}\n","<div class=\"share-form-wrapper\">\n  <div class=\"toggler-wrapper\">\n    <label>Share via:&nbsp;</label>\n    <div class=\"toggler-wrapper-options\">\n      <ng-container *ngFor=\"let shareOption of shareOptions\">\n        <app-button\n          (clicked)=\"selectShareOption(shareOption)\"\n          [label]=\"shareOption.title\"\n          [class.active]=\"isShareOptionActive(shareOption)\"\n        >\n        </app-button>\n      </ng-container>\n    </div>\n    <br/>\n  </div>\n\n  <div class=\"form-control-wrapper\" *ngIf=\"selectedShareOption\">\n    <ng-container [formGroup]=\"form\">\n      <label>\n        <app-input\n          [id]=\"'share'\"\n          [type]=\"selectedShareOption.inputType\"\n          [form]=\"form\"\n          [placeholder]=\"selectedShareOption.placeholder\"\n        >\n        </app-input>\n      </label>\n    </ng-container>\n  </div>\n</div>\n<div class=\"button-wrapper\">\n  <app-button\n    type=\"submit\"\n    [disabled]=\"!isShareFormValid\"\n    [label]=\"'Send'\"\n    (clicked)=\"submit()\"\n  >\n  </app-button>\n  <app-button\n    [class]=\"'cancel-btn'\"\n    [label]=\"'Dismiss'\"\n    (clicked)=\"dismiss()\"\n  >\n  </app-button>\n</div>\n","export * from './quote/quote.component';\nexport * from './quote-container/quote-container.component';\nexport * from './quote-share-modal/quote-share-modal.component';\nexport * from './quote-preview/quote-preview.component';\nexport * from './share-form/share-form.component';\n"]}