{"version":3,"sources":["./src/app/quotes-list/quotes-list.module.ts","./src/app/quotes-list/components/quotes-list-container/quotes-list-container.component.ts","./src/app/quotes-list/components/quotes-list-container/quotes-list-container.component.html","./src/app/quotes-list/components/index.ts","./src/app/quotes-list/components/quotes-list-container/quotes-list-container.models.rules.ts","./src/app/quotes-list/components/delete-quote-modal/delete-quote-modal.component.ts","./src/app/quotes-list/components/delete-quote-modal/delete-quote-modal.component.html","./src/app/quotes-list/quotes-list-routing.module.ts","./src/app/quotes-list/components/quotes-list-table/quotes-list-table.component.ts","./src/app/quotes-list/components/quotes-list-table/quotes-list-table.component.html"],"names":[],"mappings":"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","file":"quotes-list-quotes-list-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { DeleteQuoteModalComponent, QuotesListContainerComponent, QuotesListTableComponent } from './components';\nimport { QuotesListRoutingModule } from './quotes-list-routing.module';\n\nconst COMPONENTS = [\n  QuotesListContainerComponent,\n  QuotesListTableComponent,\n  DeleteQuoteModalComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    QuotesListRoutingModule,\n  ],\n})\nexport class QuotesListModule { }\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\n\nimport { Quote } from '../../../models';\nimport { QuoteService } from '../../../services';\nimport { TableDataSource } from '../../../shared/components/table/table.models';\nimport { filterDeleted, getTableData } from './quotes-list-container.models.rules';\n\n@Component({\n  selector: 'app-quotes-list-container',\n  templateUrl: './quotes-list-container.component.html',\n  styleUrls: [ './quotes-list-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuotesListContainerComponent {\n\n  private quotes$$ = new BehaviorSubject<TableDataSource[]>(null);\n  quotes$ = this.quotes$$.asObservable();\n\n  constructor(\n    private quoteService: QuoteService,\n  ) {\n    this.getAll().pipe(\n      take(1),\n    ).subscribe();\n  }\n\n  getAll(): Observable<TableDataSource[]> {\n    return this.quoteService.getAll().pipe(\n      map((quotes: Quote[]) => filterDeleted(quotes)),\n      map(getTableData),\n      tap((data: TableDataSource[]) => this.quotes$$.next(data)),\n    );\n  }\n\n  deleteById(id: string): void {\n    this.quoteService.delete(id).pipe(\n      take(1),\n      switchMap(() => this.getAll()),\n    ).subscribe();\n  }\n}\n","<app-quotes-list-table\n  [data]=\"quotes$ | async\"\n  (delete)=\"deleteById($event)\"\n>\n</app-quotes-list-table>\n","export * from './quotes-list-container/quotes-list-container.component';\nexport * from './quotes-list-table/quotes-list-table.component';\nexport * from './delete-quote-modal/delete-quote-modal.component';\n","import { Quote } from '../../../models';\nimport { TableDataSource } from '../../../shared/components/table/table.models';\n\nexport function getTableData(data: Quote[]): TableDataSource[] {\n  return data.map(({ text, author, id }: Quote) => {\n    return {\n      id: {\n        value: id,\n      },\n      text: {\n        value: text,\n      },\n      author: {\n        value: author,\n      },\n    };\n  });\n}\n\nexport function getQuoteFromTableDataSource(tableData: TableDataSource): Quote {\n  return {\n    id: tableData.id.value,\n    text: tableData.text.value,\n    author: tableData.author.value,\n  };\n}\n\nexport function filterDeleted(quotes: Quote[]): Quote[] {\n  return quotes.filter((quote: Quote) => !quote.isDeleted);\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\n\nimport { ModalIds } from '../../../quote/components/view.models';\n\n@Component({\n  selector: 'app-delete-quote-modal',\n  templateUrl: './delete-quote-modal.component.html',\n  styleUrls: [ './delete-quote-modal.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeleteQuoteModalComponent implements OnInit {\n  private modal: NgxSmartModalComponent;\n  private quoteIdToDelete;\n\n  constructor(\n    private modalService: NgxSmartModalService,\n  ) { }\n\n  ngOnInit(): void {\n    this.modal = this.modalService.get(ModalIds.deleteQuote);\n    this.quoteIdToDelete = this.modal.getData();\n  }\n\n  deleteQuote() {\n    this.modal.setData(this.quoteIdToDelete, true);\n    this.modal.close();\n  }\n\n  cancel() {\n    this.modal.setData(null, true);\n    this.modal.close();\n  }\n\n}\n","<p>Are you sure you want to delete this quote ?</p>\n\n<div class=\"button-wrapper\">\n  <app-button\n    label=\"Yes\"\n    (clicked)=\"deleteQuote()\"\n  >\n  </app-button>\n  <app-button\n    class=\"cancel-btn\"\n    label=\"Cancel\"\n    (clicked)=\"cancel()\"\n  >\n  </app-button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuotesListContainerComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesListContainerComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class QuotesListRoutingModule { }\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NgxSmartModalComponent, NgxSmartModalService } from 'ngx-smart-modal';\nimport { combineLatest, of, race } from 'rxjs';\nimport { switchMap, take, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { RoutesPaths } from '../../../app-routing.config';\nimport { ModalIds } from '../../../quote/components/view.models';\nimport { QuoteService } from '../../../services';\nimport { TableDataSource, TableHeadColumns } from '../../../shared/components/table/table.models';\nimport { DeleteQuoteModalComponent } from '../delete-quote-modal/delete-quote-modal.component';\nimport { getQuoteFromTableDataSource } from '../quotes-list-container/quotes-list-container.models.rules';\n\n@Component({\n  selector: 'app-quotes-list-table',\n  templateUrl: './quotes-list-table.component.html',\n  styleUrls: [ './quotes-list-table.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuotesListTableComponent {\n  @Output() delete = new EventEmitter<string>();\n  @Input() data: TableDataSource[];\n\n  columns: TableHeadColumns[] = [\n    {\n      label: 'Text',\n      key: 'text',\n    },\n    {\n      label: 'Author',\n      key: 'author',\n    },\n  ];\n\n  isControlCellAvailable = environment.apiUrls.quote;\n\n  isLoading$ = this.quoteService.isLoading$;\n\n  constructor(\n    private router: Router,\n    private modalService: NgxSmartModalService,\n    private quoteService: QuoteService,\n  ) {\n    if (this.isControlCellAvailable) {\n      this.columns.push({\n        label: 'Action',\n        key: 'action',\n      });\n    }\n  }\n\n  editQuote(row: TableDataSource) {\n    const { id } = getQuoteFromTableDataSource(row);\n\n    this.router.navigate([ `/${ RoutesPaths.quotes }`, RoutesPaths.edit, id ]);\n  }\n\n  deleteQuote(row: TableDataSource) {\n    const { id } = getQuoteFromTableDataSource(row);\n\n    this.listenToShareModalEvents(this.createAndOpenDeleteQuoteModal(id));\n  }\n\n  private createAndOpenDeleteQuoteModal(id: string): NgxSmartModalComponent {\n    return this.modalService\n      .create<DeleteQuoteModalComponent>(ModalIds.deleteQuote, DeleteQuoteModalComponent)\n      .setData(id)\n      .open();\n  }\n\n  private listenToShareModalEvents(modal: NgxSmartModalComponent): void {\n    // Listen to modal result\n    combineLatest([\n      modal.onClose,\n      modal.onDataAdded,\n    ]).pipe(\n      switchMap(([ , id ]: [ any, any ]) => {\n        if (id) {\n          this.delete.emit(id);\n        }\n\n        return of(null);\n      }),\n      take(1),\n    ).subscribe();\n\n    // Destroy modal after its close/dismiss to not duplicate its instances within modalService\n    race(\n      modal.onCloseFinished,\n      modal.onDismissFinished,\n    )\n      .pipe(\n        take(1),\n        tap(() => this.modalService.removeModal(ModalIds.deleteQuote)),\n      ).subscribe();\n  }\n\n}\n","<app-table\n  *ngIf=\"!(isLoading$ | async); else loader\"\n  [tableData]=\"data\"\n  [columns]=\"columns\"\n>\n  <ng-template name=\"control-cell\" let-row>\n    <button (click)=\"editQuote(row)\">Edit</button>\n    <button (click)=\"deleteQuote(row)\">Delete</button>\n  </ng-template>\n</app-table>\n\n<ng-template #loader>\n  <app-loader></app-loader>\n</ng-template>\n"],"sourceRoot":"webpack:///"}