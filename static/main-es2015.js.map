{"version":3,"sources":["./src/app/core/components/auth-layout/auth-layout.component.ts","./src/app/core/components/auth-layout/auth-layout.component.html","./src/app/shared/components/index.ts","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/environments/environment.ts","./src/app/shared/components/text-area/text-area.component.ts","./src/app/shared/components/text-area/text-area.component.html","./src/app/auth/services/auth.service.ts","./src/app/core/interceptors/error.interceptor.ts","./src/app/auth/guards/auth.guard.ts","./src/app/shared/shared.module.ts","./src/app/api-services/auth-api.service.ts","./src/app/shared/components/quote-edit-form/quote-edit-form.component.ts","./src/app/shared/components/quote-edit-form/quote-edit-form.component.html","./src/app/shared/components/input/input.component.ts","./src/app/shared/components/input/input.component.html","./src/app/shared/directives/template.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/button/button.component.ts","./src/app/shared/components/button/button.component.html","./src/app/core/components/index.ts","./src/app/shared/components/table/table.component.ts","./src/app/shared/components/table/table.component.html","./src/app/app.module.ts","./src/app/core/components/private-layout/private-layout.component.ts","./src/app/core/components/private-layout/private-layout.component.html","./src/app/auth/services/index.ts","./src/app/app-routing.config.ts","./src/app/shared/components/burger-button/burger-button.component.ts","./src/app/shared/components/burger-button/burger-button.component.html","./src/app/core/interceptors/basic-auth.interceptor.ts","./src/app/shared/components/quote-tag/quote-tag.models-rules.ts","./src/app/core/core.module.ts","./src/app/auth/guards/login-page.guard.ts","./src/app/core/components/navigation/navigation.component.ts","./src/app/core/components/navigation/navigation.component.html","./src/app/app-navigation.config.ts","./src/app/auth/guards/index.ts","./src/app/app-routing.module.ts","./src/app/shared/directives/index.ts","./src/main.ts","./src/app/shared/components/quote-tag/quote-tag.component.ts","./src/app/shared/components/quote-tag/quote-tag.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: [ './auth-layout.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","export * from './table/table.component';\nexport * from './button/button.component';\nexport * from './input/input.component';\nexport * from './text-area/text-area.component';\nexport * from './loader/loader.component';\nexport * from './quote-edit-form/quote-edit-form.component';\nexport * from './quote-tag/quote-tag.component';\nexport * from './burger-button/burger-button.component';\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: [ './loader.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader-wrapper\">\n  <div class=\"lds-grid\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  isAuthorizationEnabled: false,\n  apiUrls: {\n    auth: '',\n    quote: 'http://localhost:3001/api', // Put here your QUOTE API BASE URL. E.g.: api or https://quote.com/api\n    share: '', // Put here your SHARE API BASE URL. E.g.: api or https://share.com/api\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: [ './text-area.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextAreaComponent implements OnInit {\n  @Input() placeholder = '';\n  @Input() label = '';\n  @Input() form: FormGroup;\n  @Input() id: string;\n\n  control: FormControl;\n\n  ngOnInit() {\n    this.control = this.form.get(this.id) as FormControl;\n  }\n}\n","<ng-container [formGroup]=\"form\">\n  <label>\n    <span class=\"label-text\">{{ label }}</span>\n    <textarea\n      class=\"app-text-area\"\n      [class.invalid]=\"form.controls[ id ].invalid && form.controls[ id ].touched\"\n      [formControl]=\"control\"\n      [placeholder]=\"placeholder\"\n    ></textarea>\n  </label>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { AuthApiService } from '../../api-services/auth-api.service';\nimport { ApiResponse, AuthData } from '../../models';\nimport { User } from '../models/auth.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  authData$: Observable<AuthData>;\n  isLoading$: Observable<boolean>;\n  private authData$$: BehaviorSubject<AuthData>;\n  private isLoading$$: BehaviorSubject<boolean>;\n\n  constructor(\n    private authApiService: AuthApiService,\n    private router: Router,\n  ) {\n    const authData = localStorage.getItem('authData');\n\n    this.authData$$ = new BehaviorSubject<AuthData>(authData ? JSON.parse(authData) : null);\n    this.authData$ = this.authData$$.asObservable();\n\n    this.isLoading$$ = new BehaviorSubject<boolean>(false);\n    this.isLoading$ = this.isLoading$$.asObservable();\n  }\n\n  get authDataValue(): AuthData {\n    return this.authData$$.value;\n  }\n\n  login(user: User): Observable<AuthData> {\n    this.isLoading$$.next(true);\n\n    return this.authApiService.login(user)\n      .pipe(\n        map(({ data }: ApiResponse<AuthData>) => {\n          localStorage.setItem('authData', JSON.stringify(data));\n          this.authData$$.next(data);\n\n          return data;\n        }),\n        tap(() => this.isLoading$$.next(false)),\n        catchError((err: any) => {\n          this.isLoading$$.next(false);\n\n          return throwError(err);\n        })\n      );\n  }\n\n  logout(): void {\n    // remove user from local storage to log user out\n    localStorage.removeItem('authData');\n    this.authData$$.next(null);\n\n    this.router.navigate([ 'auth', 'login' ]);\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../../auth/services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private authService: AuthService,\n    private toastrService: ToastrService,\n  ) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError(err => {\n        if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.authService.logout();\n        }\n        const error = err.error.message || err.statusText;\n        const defaultErrorMessage = 'Sorry, but something went wrong, please try again.';\n\n        this.toastrService.error(defaultErrorMessage);\n\n        return throwError(error);\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../services';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!environment.isAuthorizationEnabled) {\n      return true;\n    }\n\n    const user = this.authService.authDataValue;\n    if (user) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate([ 'auth', 'login' ], { queryParams: { returnUrl: state.url } });\n\n    return false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  BurgerButtonComponent,\n  ButtonComponent,\n  InputComponent,\n  LoaderComponent,\n  QuoteEditFormComponent,\n  QuoteTagComponent,\n  TableComponent,\n  TextAreaComponent } from './components';\nimport { TemplateDirective } from './directives';\n\nconst COMPONENTS = [\n  TableComponent,\n  ButtonComponent,\n  InputComponent,\n  TextAreaComponent,\n  LoaderComponent,\n  QuoteEditFormComponent,\n  QuoteTagComponent,\n  BurgerButtonComponent,\n];\n\nconst DIRECTIVES = [\n  TemplateDirective,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n    ...DIRECTIVES,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    ...COMPONENTS,\n    ...DIRECTIVES,\n\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class SharedModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../auth/models/auth.model';\nimport { ApiResponse, AuthData } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthApiService {\n  private apiBase: string = environment.apiUrls.auth;\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  login<T = AuthData>(user: User): Observable<ApiResponse<T>> {\n    const url = `${ this.apiBase }/login`;\n\n    return this.http.post<ApiResponse<T>>(url, user);\n  }\n\n  logout(): Observable<ApiResponse<any>> {\n    const url = `${ this.apiBase }/logout`;\n\n    return this.http.get<ApiResponse<any>>(url);\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Quote } from '../../../models';\nimport { QuoteTagComponent } from '../quote-tag/quote-tag.component';\n\n@Component({\n  selector: 'app-quote-edit-form',\n  templateUrl: './quote-edit-form.component.html',\n  styleUrls: [ './quote-edit-form.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteEditFormComponent implements OnInit {\n  @ViewChild('quoteTags', { static: false }) quoteTags: QuoteTagComponent;\n  @Output() submitted = new EventEmitter<Quote>();\n\n  @Input() initialData: Quote = {\n    author: '',\n    text: '',\n    source: '',\n    tags: '',\n  } as Quote;\n\n  editQuoteForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.editQuoteForm = this.fb.group({\n      [ 'author' ]: new FormControl(this.initialData.author, [ Validators.required ]),\n      [ 'text' ]: new FormControl(this.initialData.text, [ Validators.required ]),\n      [ 'source' ]: new FormControl(this.initialData.source, [ Validators.required ]),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.editQuoteForm.invalid) {\n      return;\n    }\n\n    this.submitted.emit({\n      ...this.initialData,\n      ...this.editQuoteForm.value,\n      tags: this.quoteTags.getValue,\n    });\n  }\n\n}\n","<form [formGroup]=\"editQuoteForm\" class=\"edit-form\">\n  <app-input\n    label=\"Author*\"\n    [id]=\"'author'\"\n    [form]=\"editQuoteForm\"\n  >\n  </app-input>\n\n  <app-input\n    label=\"Source*\"\n    [id]=\"'source'\"\n    [form]=\"editQuoteForm\"\n  >\n  </app-input>\n\n\n  <app-text-area\n    label=\"Text*\"\n    [id]=\"'text'\"\n    [form]=\"editQuoteForm\"\n  >\n  </app-text-area>\n  <app-quote-tag\n    #quoteTags\n    [initialData]=\"initialData.tags\"\n  >\n  </app-quote-tag>\n\n  <app-button\n    type=\"submit\"\n    [label]=\"'Submit'\"\n    [disabled]=\"editQuoteForm.invalid\"\n    (clicked)=\"onSubmit()\"\n  ></app-button>\n</form>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: [ './input.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent implements OnInit {\n  @Output() clear = new EventEmitter<string>();\n\n  @Input() placeholder = '';\n  @Input() label = '';\n  @Input() hasClearButton = false;\n  @Input() form: FormGroup;\n  @Input() type: string;\n  @Input() id: string;\n\n  control: FormControl;\n\n  ngOnInit(): void {\n    this.control = this.form.get(this.id) as FormControl;\n  }\n\n  clearButtonClicked(): void {\n    this.clear.emit(this.id);\n  }\n}\n","<ng-container [formGroup]=\"form\">\n  <label>\n    <span class=\"label-text\">{{ label }}</span>\n    <input\n      class=\"app-input\"\n      [class.invalid]=\"form.controls[ id ].invalid && form.controls[ id ].touched\"\n      [type]=\"type\"\n      [formControl]=\"control\"\n      [placeholder]=\"placeholder\"\n    />\n    <button\n      class=\"clear-button\"\n      *ngIf=\"hasClearButton\"\n      (click)=\"clearButtonClicked()\"\n    >\n      x\n    </button>\n  </label>\n</ng-container>\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'ng-template[name]',\n})\nexport class TemplateDirective {\n  @Input() name: string;\n\n  constructor(\n    public template: TemplateRef<any>,\n  ) { }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = 'quoteApp';\n}\n","<router-outlet></router-outlet>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: [ './button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent implements OnInit {\n  @Input() label: string;\n  @Input() type = 'button';\n  @Input() disabled?: boolean;\n  @Input() class?: string;\n\n  @Output() clicked = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  ngOnInit(): void {\n  }\n\n  onClick(event: MouseEvent | KeyboardEvent): void {\n    this.clicked.next(event);\n  }\n\n}\n","<button\n  class=\"app-button\"\n  [class]=\"class\"\n  [disabled]=\"disabled\"\n  [type]=\"type\"\n  (click)=\"onClick($event)\"\n>\n  <span *ngIf=\"label\" class=\"app-button__text\">{{ label }}</span>\n</button>\n","export * from './private-layout/private-layout.component';\nexport * from './auth-layout/auth-layout.component';\nexport * from './navigation/navigation.component';\n","import { ChangeDetectionStrategy, Component, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { environment } from '../../../../environments/environment';\nimport { TemplateDirective } from '../../directives';\nimport { TableDataSource, TableHeadColumns } from './table.models';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: [ './table.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent {\n  @ContentChildren(TemplateDirective) set contentChildren(queryList: QueryList<TemplateDirective>) {\n    if (!queryList.length) {\n      return;\n    }\n\n    this.templateRefList = queryList.toArray().reduce(\n      (buf: any, templateDirective: TemplateDirective) => ({\n        ...buf,\n        [ templateDirective.name ]: templateDirective.template,\n      }), {});\n  }\n  templateRefList: any;\n\n  @Input() tableData: TableDataSource[] = [];\n  @Input() columns: TableHeadColumns[] = [];\n\n  isApiProvided = environment.apiUrls.quote;\n}\n","<table>\n  <tr>\n    <th *ngFor=\"let column of columns\">{{ column.label }}</th>\n  </tr>\n  <tr *ngFor=\"let data of tableData\">\n    <ng-container *ngFor=\"let column of columns\">\n      <td *ngIf=\"data[ column.key ]?.value as value\">\n        {{ value }}\n      </td>\n    </ng-container>\n    <td *ngIf=\"isApiProvided\">\n      <ng-container\n        [ngTemplateOutletContext]=\"{ $implicit: data }\"\n        [ngTemplateOutlet]=\"controlButtons\"\n      >\n      </ng-container>\n    </td>\n  </tr>\n  <tr class=\"no-data-tr\">\n    <td [colSpan]=\"columns.length\" *ngIf=\"!tableData || !tableData.length\">\n      No data found.\n    </td>\n  </tr>\n</table>\n\n<ng-template #controlButtons let-row>\n  <ng-container\n    [ngTemplateOutlet]=\"templateRefList[ 'control-cell' ]\"\n    [ngTemplateOutletContext]=\"{ $implicit: row }\"\n  ></ng-container>\n</ng-template>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule,\n    NgxSmartModalModule.forRoot(),\n    ToastrModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ],\n})\nexport class AppModule { }\n","import { AfterViewInit, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\n\nimport { filter, tap } from 'rxjs/operators';\n\nimport { AuthService } from '../../../auth/services';\n\n@Component({\n  selector: 'app-private-layout',\n  templateUrl: './private-layout.component.html',\n  styleUrls: [ './private-layout.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrivateLayoutComponent implements AfterViewInit {\n  opened = false;\n  isAnimated = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.listenOnRouteChange();\n    this.authService.authData$.subscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.isAnimated = true;\n  }\n\n  toggleSidebar() {\n    this.opened = !this.opened;\n  }\n\n  private listenOnRouteChange() {\n    this.router.events.pipe(\n      filter((event: RouterEvent) => event instanceof NavigationEnd),\n      tap(() => {\n        this.opened = false;\n      }),\n    ).subscribe();\n  }\n}\n","<ng-sidebar-container>\n  <ng-sidebar\n    position=\"right\"\n    showBackdrop=\"true\"\n    [animate]=\"isAnimated\"\n    [(opened)]=\"opened\"\n  >\n    <button class=\"close-sidebar\" (click)=\"toggleSidebar()\"></button>\n    <app-navigation></app-navigation>\n  </ng-sidebar>\n\n  <div ng-sidebar-content>\n    <header>\n      <h1 class=\"logo\"></h1>\n      <app-navigation></app-navigation>\n      <app-burger-button (clicked)=\"toggleSidebar()\"></app-burger-button>\n    </header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</ng-sidebar-container>\n","export * from './auth.service';\n","export enum RoutesPaths {\n  root = '/',\n  quotes = 'quotes',\n  auth = 'auth',\n  new = 'new',\n  edit = 'edit',\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-burger-button',\n  templateUrl: './burger-button.component.html',\n  styleUrls: [ './burger-button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BurgerButtonComponent {\n  @Output() clicked = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  onClick(): void {\n    this.clicked.emit();\n  }\n}\n","<button (click)=\"onClick()\"></button>\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../auth/services';\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n  private apiBase: string = environment.apiUrls.quote;\n  private apiShare: string = environment.apiUrls.share;\n  private isAuthorizationEnable: boolean = environment.isAuthorizationEnabled;\n\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isAuthorizationEnable) {\n      return next.handle(request);\n    }\n\n    const authData = this.authService.authDataValue;\n    const isLoggedIn = authData && authData.access_token;\n    const isApiUrl = request.url.startsWith(this.apiBase) || request.url.startsWith(this.apiShare);\n\n    if (isLoggedIn && isApiUrl) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Basic ${authData.access_token}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { FormGroup } from '@angular/forms';\n\nimport * as uuid from 'uuid';\n\nimport { QuoteTag } from './quote-tag.models';\n\nexport function generateUniqueId(): string {\n  return uuid.v4();\n}\n\nexport function getTagsArrayFromString(tags: string, separator: string = ', '): QuoteTag[] {\n  return tags.split(separator).map((tag: string) => ({\n    id: generateUniqueId(),\n    value: tag,\n  }));\n}\n\nexport function getFormattedTagsFromFormValue(tagForm: FormGroup, separator: string = ', '): string {\n  return Object.entries(tagForm.value)\n    .filter(([ _, value ]) => !!value)\n    .map(([ _, value ]) => (value as string).replace(/,/g, ''))\n    .join(separator);\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SidebarModule } from 'ng-sidebar';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthLayoutComponent, NavigationComponent, PrivateLayoutComponent } from './components';\nimport { BasicAuthInterceptor } from './interceptors/basic-auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\n\nconst COMPONENTS = [\n  PrivateLayoutComponent,\n  AuthLayoutComponent,\n  NavigationComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BasicAuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    SidebarModule.forRoot(),\n  ],\n  exports: [\n    ...COMPONENTS,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class LoginPageGuard implements CanActivate {\n  constructor(\n    private router: Router,\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!environment.isAuthorizationEnabled) {\n      this.router.navigate([ '/' ]);\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { environment } from '../../../../environments/environment';\nimport { APP_NAVIGATION_CONFIG } from '../../../app-navigation.config';\nimport { AuthService } from '../../../auth/services';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: [ './navigation.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  navigationItems = APP_NAVIGATION_CONFIG;\n  isAuthenticated = !!this.authService.authDataValue;\n  isAuthorizationEnable = environment.isAuthorizationEnabled;\n\n  constructor(\n    private authService: AuthService,\n  ) {}\n\n  logout(): void {\n    this.authService.logout();\n  }\n\n}\n","<ul>\n  <ng-container *ngFor=\"let navigationItem of navigationItems\">\n    <li *ngIf=\"!navigationItem.isDisabled\">\n      <a [routerLink]=\"navigationItem.path\">{{ navigationItem.label }}</a>\n    </li>\n  </ng-container>\n  <li *ngIf=\"isAuthenticated && isAuthorizationEnable\"\n      class=\"logout\"\n  >\n    <app-button\n      label=\"Logout\"\n      (clicked)=\"logout()\"\n    >\n    </app-button>\n  </li>\n</ul>\n","import { environment } from '../environments/environment';\nimport { RoutesPaths } from './app-routing.config';\nimport { NavigationItem } from './core/components/navigation/navigation.models';\n\nexport const APP_NAVIGATION_CONFIG: NavigationItem[] = [\n  {\n    label: 'Home',\n    path: [ RoutesPaths.root ],\n  },\n  {\n    label: 'Quotes list',\n    path: [ RoutesPaths.quotes ],\n  },\n  {\n    label: 'Add quote',\n    path: [ RoutesPaths.quotes, RoutesPaths.new ],\n    isDisabled: !environment.apiUrls.quote,\n  },\n];\n","export * from './auth.guard';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { RoutesPaths } from './app-routing.config';\nimport { AuthGuard } from './auth/guards';\nimport { LoginPageGuard } from './auth/guards/login-page.guard';\nimport { AuthLayoutComponent, PrivateLayoutComponent } from './core/components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      {\n        path: '',\n        canActivate: [ AuthGuard ],\n        component: PrivateLayoutComponent,\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./quote/quote.module').then(m => m.QuoteModule),\n          },\n          {\n            path: RoutesPaths.quotes,\n            children: [\n              {\n                path: '',\n                loadChildren: () => import('./quotes-list/quotes-list.module').then(m => m.QuotesListModule),\n              },\n              {\n                path: '',\n                loadChildren: () => import('./quote-edit/quote-edit.module').then(m => m.QuoteEditModule),\n              },\n              {\n                path: '',\n                loadChildren: () => import('./quote-new/quote-new.module').then(m => m.QuoteNewModule),\n              },\n            ],\n\n          },\n        ],\n      },\n      {\n        path: RoutesPaths.auth,\n        component: AuthLayoutComponent,\n        canActivate: [ LoginPageGuard ],\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule),\n          },\n        ],\n      },\n      {\n        path: '**',\n        redirectTo: '',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","export * from './template.directive';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { QuoteTag } from './quote-tag.models';\nimport { generateUniqueId, getFormattedTagsFromFormValue, getTagsArrayFromString } from './quote-tag.models-rules';\n\n@Component({\n  selector: 'app-quote-tag',\n  templateUrl: './quote-tag.component.html',\n  styleUrls: [ './quote-tag.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteTagComponent implements OnInit {\n  @Input() initialData: string;\n\n  form: FormGroup;\n  tags: QuoteTag[] = [];\n\n  get getValue() {\n    return getFormattedTagsFromFormValue(this.form);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.tags = getTagsArrayFromString(this.initialData);\n\n    this.form = this.fb.group({});\n\n    this.tags.forEach((tag: QuoteTag) => {\n      this.form.addControl(tag.id, new FormControl(tag.value));\n    });\n  }\n\n  addTag(): void {\n    const uniqueId = generateUniqueId();\n    this.form.addControl(uniqueId, new FormControl(''));\n\n    this.tags.push({\n      id: uniqueId,\n      value: '',\n    });\n  }\n\n  deleteTagById(id: string): void {\n    const index = this.tags.findIndex((tag: QuoteTag) => tag.id === id);\n\n    if (index !== -1) {\n      this.tags.splice(index, 1);\n      this.form.removeControl(id);\n    }\n  }\n\n}\n","<span class=\"label-text\" *ngIf=\"tags.length\">Tags</span>\n<div [formGroup]=\"form\">\n  <ng-container>\n    <app-input\n      *ngFor=\"let tag of tags\"\n      [hasClearButton]=\"true\"\n      [id]=\"tag.id\"\n      [form]=\"form\"\n      (clear)=\"deleteTagById($event)\"\n    >\n    </app-input>\n\n    <app-button\n      label=\"Add new tag\"\n      (clicked)=\"addTag()\"\n    >\n    </app-button>\n  </ng-container>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}