{"version":3,"sources":["./src/app/api-services/quote-api.service.ts","./src/app/services/index.ts","./src/app/api-services/index.ts","./node_modules/quotesy/lib/index.js","./src/app/services/quote.service.ts"],"names":[],"mappings":"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","file":"default~quote-edit-quote-edit-module~quote-new-quote-new-module~quote-quote-module~quotes-list-quote~f47df4a7-es2015.js","sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { ContactData, Quote } from '../models';\n\n@Injectable({ providedIn: 'root' })\nexport class QuoteApiService {\n  private apiBase: string = environment.apiUrls.quote;\n  private shareApiBase: string = environment.apiUrls.share;\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  /**\n   *\n   * @returns {Observable<Quote>}\n   */\n  getAll(): Observable<Quote[]> {\n    const url = `${ this.apiBase }/quotes`;\n\n    return this.http.get<Quote[]>(url).pipe(\n      map((res: any) => res.data),\n    );\n  }\n\n  getById(id: string): Observable<Quote> {\n    const url = `${ this.apiBase }/quotes/${ id }`;\n\n    return this.http.get<Quote>(url).pipe(\n      map((res: any) => res.data),\n    );\n  }\n\n  /**\n   * @returns {Observable<Quote>}\n   */\n  getRandom(): Observable<Quote> {\n    const url = `${ this.apiBase }/quotes/random`;\n\n    return this.http.get<Quote>(url).pipe(\n      map((res: any) => res.data),\n    );\n  }\n\n  /**\n   * @param {string} tag\n   * @returns {Observable<Quote>}\n   */\n  getRandomByTag(tag: string): Observable<Quote> {\n    const url = `${ this.apiBase }/quotes/random-by-tag`;\n    const params = new HttpParams({ fromObject: { tag } });\n\n    return this.http.get<Quote>(url, { params });\n  }\n\n  share(quote: Quote, contactDetails?: ContactData): Observable<any> {\n    const url = `${ this.shareApiBase }/share`;\n\n    return this.http.post<any>(url, { quote, ...contactDetails });\n  }\n\n  create(quote: Quote): Observable<any> {\n    const url = `${ this.apiBase }/quotes`;\n\n    return this.http.post<any>(url, { quote });\n  }\n\n  delete(quoteId: string): Observable<any> {\n    const url = `${ this.apiBase }/quotes/${ quoteId }`;\n\n    return this.http.delete<any>(url);\n  }\n\n  edit(quote: Quote): Observable<any> {\n    const url = `${ this.apiBase }/quotes/${ quote.id }`;\n\n    return this.http.put<any>(url, quote);\n  }\n\n}\n","export * from './quote.service';\n","export * from './quote-api.service';\n","const quotes = require(\"../quotes.json\")\n\n/**\n * `parse_json` returns and Array of quote Objects.\n */\nfunction parse_json () {\n  return quotes;\n}\n\n/**\n * `random` returns a random quote\n * returns Object - a random quote from the list\n */\nfunction random () {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n}\n\n/**\n * `random_by_tag` returns a random quote for a specific tag\n * returns Object - a random quote from the list with the desired tag\n */\nfunction random_by_tag (tag) {\n  const q_by_tag = quotes.filter((q) => {\n    return q.text.includes(tag) || (q.tags && q.tags.includes(tag))\n  })\n  return q_by_tag[Math.floor(Math.random() * q_by_tag.length)];\n}\n\n\n\n\nmodule.exports = {\n  parse_json: parse_json,\n  random: random,\n  random_by_tag: random_by_tag\n};\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport quotesy from 'quotesy';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { catchError, distinctUntilChanged, tap } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { QuoteApiService } from '../api-services';\nimport { ContactData, Quote } from '../models';\n\nexport const QUOTESY = new InjectionToken('QUOTESY', {\n  providedIn: 'root',\n  factory: () => quotesy,\n});\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuoteService {\n  private isLoading$$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  isLoading$: Observable<boolean> = this.isLoading$$.asObservable();\n\n  private quote$$ = new BehaviorSubject<Quote>(null);\n  quote$: Observable<Quote> = this.quote$$.asObservable().pipe(distinctUntilChanged());\n\n  hasApiUrl = !!environment.apiUrls.quote;\n  hasShareApiUrl = !!environment.apiUrls.share;\n\n  constructor(\n    private quotesApi: QuoteApiService,\n    private toastrService: ToastrService,\n    @Inject(QUOTESY) private quotes: any,\n  ) {}\n\n  getRandom(): Observable<Quote> {\n    this.isLoading$$.next(true);\n\n    return (\n      this.hasApiUrl\n        ? this.quotesApi.getRandom()\n        : of(this.quotes.random())\n    ).pipe(\n      tap((quote: Quote) => this.emitQuote({ ...quote })),\n      tap(() => this.isLoading$$.next(false)),\n      catchError((err: any) => {\n        this.isLoading$$.next(false);\n\n        return throwError(err);\n      }),\n    );\n  }\n\n  getById(id: string): Observable<Quote> {\n    this.isLoading$$.next(true);\n\n    return this.quotesApi.getById(id).pipe(\n      tap(() => this.isLoading$$.next(false)),\n      catchError((err: any) => {\n        this.isLoading$$.next(false);\n\n        return throwError(err);\n      }),\n    );\n  }\n\n  edit(quote: Quote): Observable<any> {\n    this.isLoading$$.next(true);\n\n    return this.quotesApi.edit(quote).pipe(\n      tap(() => this.isLoading$$.next(false)),\n      tap(() => this.toastrService.success('Quote successfully edited.')),\n      catchError((err: any) => {\n        this.isLoading$$.next(false);\n\n        return throwError(err);\n      }),\n    );\n  }\n\n  create(quote: Quote): Observable<any> {\n    this.isLoading$$.next(true);\n\n    return this.quotesApi.create(quote).pipe(\n      tap(() => this.isLoading$$.next(false)),\n      tap(() => this.toastrService.success('Quote has been created.')),\n      catchError((err: any) => {\n        this.isLoading$$.next(false);\n\n        return throwError(err);\n      }),\n    );\n  }\n\n  getAll(): Observable<Quote[]> {\n    this.isLoading$$.next(true);\n\n    return (\n      this.hasApiUrl\n        ? this.quotesApi.getAll()\n        : of(this.quotes.parse_json())\n    ).pipe(\n      tap(() => this.isLoading$$.next(false)),\n      catchError((err: any) => {\n        this.isLoading$$.next(false);\n\n        return throwError(err);\n      }),\n    );\n  }\n\n  share(quote: Quote, contactData: ContactData): Observable<any> {\n    this.isLoading$$.next(true);\n\n    return this.hasShareApiUrl ?\n      this.quotesApi.share(quote, contactData) :\n      // eslint-disable-next-line no-console\n      of(null).pipe(\n        tap(() => console.info('shared: ', quote, contactData)),\n        tap(() => this.isLoading$$.next(false)),\n        tap(() => this.toastrService.success('Quote has been successfully shared.')),\n        catchError((err: any) => {\n          this.isLoading$$.next(false);\n\n          return throwError(err);\n        }),\n      );\n  }\n\n  delete(id: string): Observable<any> {\n    this.isLoading$$.next(true);\n\n    return this.quotesApi.delete(id).pipe(\n      tap(() => this.isLoading$$.next(false)),\n      tap(() => this.toastrService.success('Quote successfully removed.')),\n      catchError((err: any) => {\n        this.isLoading$$.next(false);\n\n        return throwError(err);\n      }),\n    );\n  }\n\n  private emitQuote(quote: Quote): void {\n    this.quote$$.next({ ...quote });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}