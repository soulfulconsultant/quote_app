{"version":3,"sources":["./src/app/quote-edit/components/index.ts","./src/app/quote-edit/quote-edit.module.ts","./src/app/quote-edit/components/quote-edit-container/quote-edit-container.component.ts","./src/app/quote-edit/components/quote-edit-container/quote-edit-container.component.html","./src/app/quote-edit/quote-edit-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAsE;;;;;;;;;;;;;ACAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAGQ;AACI;AACU;;AAErE,MAAM,UAAU,GAAG;IACjB,uEAA2B;CAC5B,CAAC;AAYK,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,kBANjB;YACP,4DAAY;YACZ,kEAAY;YACZ,iFAAsB;SACvB;mIAEU,eAAe,mBAb1B,uEAA2B,aAQzB,4DAAY;QACZ,kEAAY;QACZ,iFAAsB;;;;;;;;;;;;;ACf1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACG;AAER;;;;;;;;;ICHxD,yFAIC;IADC,kYAAiC;IAEnC,4DAAsB;;;IAHpB,iFAAqB;;;IALzB,wEAEC;IACC,sKAKsB;;IACxB,qEAAe;;;;IALV,0DAA4B;IAA5B,qJAA4B;;;IAQ/B,wEAAyB;;ADIpB,MAAM,2BAA2B;IAKtC,YACU,cAA8B,EAC9B,YAA0B,EAC1B,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAPhB,YAAO,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAC5C,WAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QACrC,eAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAOxC,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC;QAE9C,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACpC,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAChC,gEAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAC5C,2DAAI,CAAC,CAAC,CAAC,CACR,CAAC,SAAS,EAAE,CAAC;IAChB,CAAC;IAEO,YAAY,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CACvC,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAG,CAAC,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/C,iEAAU,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,+DAAW,CAAC,MAAM,CAAE,CAAC,CAAC;YAE7C,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;;sGAhCU,2BAA2B;2GAA3B,2BAA2B;QChBxC,yIASe;;QAEf,mNAEc;;;QAZX,6IAAuB;;;;;;;;;;;;;;ACA1B;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEI;;;AAE3D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,uEAA2B;KACvC;CACF,CAAC;AAMK,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAHxB,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE,EAC/B,4DAAY;mIAEZ,sBAAsB,uFAFtB,4DAAY","file":"quote-edit-quote-edit-module-es2015.js","sourcesContent":["export * from './quote-edit-container/quote-edit-container.component';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { QuoteEditContainerComponent } from './components';\nimport { QuoteEditRoutingModule } from './quote-edit-routing.module';\n\nconst COMPONENTS = [\n  QuoteEditContainerComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    QuoteEditRoutingModule,\n  ],\n})\nexport class QuoteEditModule { }\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, switchMap, take, tap } from 'rxjs/operators';\n\nimport { RoutesPaths } from '../../../app-routing.config';\nimport { Quote } from '../../../models';\nimport { QuoteService } from '../../../services';\n\n@Component({\n  selector: 'app-quote-edit-container',\n  templateUrl: './quote-edit-container.component.html',\n  styleUrls: [ './quote-edit-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteEditContainerComponent {\n  private quote$$ = new BehaviorSubject(null);\n  quote$ = this.quote$$.asObservable();\n  isLoading$ = this.quoteService.isLoading$;\n\n  constructor(\n    private activateRouter: ActivatedRoute,\n    private quoteService: QuoteService,\n    private router: Router,\n  ) {\n    const { id } = activateRouter.snapshot.params;\n\n    this.getQuoteById(id).subscribe();\n  }\n\n  onSubmitted(quote: Quote): void {\n    this.quoteService.edit(quote).pipe(\n      switchMap(() => this.getQuoteById(quote.id)),\n      take(1),\n    ).subscribe();\n  }\n\n  private getQuoteById(id: string): Observable<Quote> {\n    return this.quoteService.getById(id).pipe(\n      take(1),\n      tap((quote: Quote) => this.quote$$.next(quote)),\n      catchError((err: any) => {\n        this.router.navigate([ RoutesPaths.quotes ]);\n\n        return throwError(err);\n      })\n    );\n  }\n\n}\n","<ng-container\n  *ngIf=\"(quote$ | async) as quote; else loader\"\n>\n  <app-quote-edit-form\n    *ngIf=\"!(isLoading$ | async) else loader\"\n    [initialData]=\"quote\"\n    (submitted)=\"onSubmitted($event)\"\n  >\n  </app-quote-edit-form>\n</ng-container>\n\n<ng-template #loader>\n  <app-loader></app-loader>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuoteEditContainerComponent } from './components';\n\nconst routes: Routes = [\n  {\n    path: 'edit/:id',\n    component: QuoteEditContainerComponent,\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class QuoteEditRoutingModule { }\n"],"sourceRoot":"webpack:///"}