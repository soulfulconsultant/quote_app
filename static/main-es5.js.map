{"version":3,"sources":["webpack:///src/app/core/components/auth-layout/auth-layout.component.ts","webpack:///src/app/core/components/auth-layout/auth-layout.component.html","webpack:///src/app/shared/components/index.ts","webpack:///src/app/shared/components/loader/loader.component.ts","webpack:///src/app/shared/components/loader/loader.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/shared/components/text-area/text-area.component.ts","webpack:///src/app/shared/components/text-area/text-area.component.html","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/core/interceptors/error.interceptor.ts","webpack:///src/app/auth/guards/auth.guard.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/api-services/auth-api.service.ts","webpack:///src/app/shared/components/quote-edit-form/quote-edit-form.component.ts","webpack:///src/app/shared/components/quote-edit-form/quote-edit-form.component.html","webpack:///src/app/shared/components/input/input.component.ts","webpack:///src/app/shared/components/input/input.component.html","webpack:///src/app/shared/directives/template.directive.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/shared/components/button/button.component.ts","webpack:///src/app/shared/components/button/button.component.html","webpack:///src/app/core/components/index.ts","webpack:///src/app/shared/components/table/table.component.ts","webpack:///src/app/shared/components/table/table.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/private-layout/private-layout.component.ts","webpack:///src/app/core/components/private-layout/private-layout.component.html","webpack:///src/app/auth/services/index.ts","webpack:///src/app/app-routing.config.ts","webpack:///src/app/shared/components/burger-button/burger-button.component.ts","webpack:///src/app/shared/components/burger-button/burger-button.component.html","webpack:///src/app/core/interceptors/basic-auth.interceptor.ts","webpack:///src/app/shared/components/quote-tag/quote-tag.models-rules.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/auth/guards/login-page.guard.ts","webpack:///src/app/core/components/navigation/navigation.component.ts","webpack:///src/app/core/components/navigation/navigation.component.html","webpack:///src/app/app-navigation.config.ts","webpack:///src/app/auth/guards/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/directives/index.ts","webpack:///src/main.ts","webpack:///src/app/shared/components/quote-tag/quote-tag.component.ts","webpack:///src/app/shared/components/quote-tag/quote-tag.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthLayoutComponent","LoaderComponent","environment","production","isAuthorizationEnabled","apiUrls","auth","quote","share","TextAreaComponent","placeholder","label","control","form","get","id","AuthService","authApiService","router","authData","localStorage","getItem","authData$$","JSON","parse","authData$","asObservable","isLoading$$","isLoading$","value","user","next","login","pipe","data","setItem","stringify","err","removeItem","navigate","ErrorInterceptor","authService","toastrService","request","handle","status","logout","error","message","statusText","defaultErrorMessage","AuthGuard","route","state","authDataValue","queryParams","returnUrl","url","COMPONENTS","DIRECTIVES","SharedModule","AuthApiService","http","apiBase","post","QuoteEditFormComponent","fb","submitted","initialData","author","text","source","tags","editQuoteForm","group","required","invalid","emit","quoteTags","getValue","onSubmit","InputComponent","clear","hasClearButton","TemplateDirective","template","AppComponent","title","ButtonComponent","type","clicked","event","onClick","TableComponent","tableData","columns","isApiProvided","queryList","length","templateRefList","toArray","reduce","buf","templateDirective","name","AppModule","forRoot","PrivateLayoutComponent","opened","isAnimated","listenOnRouteChange","subscribe","events","toggleSidebar","RoutesPaths","BurgerButtonComponent","BasicAuthInterceptor","apiShare","isAuthorizationEnable","isLoggedIn","access_token","isApiUrl","startsWith","clone","setHeaders","Authorization","generateUniqueId","getTagsArrayFromString","separator","split","map","tag","getFormattedTagsFromFormValue","tagForm","Object","entries","filter","_","replace","join","CoreModule","provide","useClass","multi","LoginPageGuard","NavigationComponent","navigationItems","isAuthenticated","APP_NAVIGATION_CONFIG","path","root","quotes","isDisabled","routes","component","children","canActivate","loadChildren","then","m","QuoteModule","QuotesListModule","QuoteEditModule","QuoteNewModule","AuthModule","redirectTo","AppRoutingModule","relativeLinkResolution","bootstrapModule","console","QuoteTagComponent","forEach","addControl","uniqueId","push","index","findIndex","splice","removeControl","addTag","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: [ './auth-layout.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","export * from './table/table.component';\nexport * from './button/button.component';\nexport * from './input/input.component';\nexport * from './text-area/text-area.component';\nexport * from './loader/loader.component';\nexport * from './quote-edit-form/quote-edit-form.component';\nexport * from './quote-tag/quote-tag.component';\nexport * from './burger-button/burger-button.component';\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: [ './loader.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader-wrapper\">\n  <div class=\"lds-grid\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  isAuthorizationEnabled: false,\n  apiUrls: {\n    auth: '',\n    quote: 'http://localhost:3001/api', // Put here your QUOTE API BASE URL. E.g.: api or https://quote.com/api\n    share: '', // Put here your SHARE API BASE URL. E.g.: api or https://share.com/api\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: [ './text-area.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextAreaComponent implements OnInit {\n  @Input() placeholder = '';\n  @Input() label = '';\n  @Input() form: FormGroup;\n  @Input() id: string;\n\n  control: FormControl;\n\n  ngOnInit() {\n    this.control = this.form.get(this.id) as FormControl;\n  }\n}\n","<ng-container [formGroup]=\"form\">\n  <label>\n    <span class=\"label-text\">{{ label }}</span>\n    <textarea\n      class=\"app-text-area\"\n      [class.invalid]=\"form.controls[ id ].invalid && form.controls[ id ].touched\"\n      [formControl]=\"control\"\n      [placeholder]=\"placeholder\"\n    ></textarea>\n  </label>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { AuthApiService } from '../../api-services/auth-api.service';\nimport { ApiResponse, AuthData } from '../../models';\nimport { User } from '../models/auth.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  authData$: Observable<AuthData>;\n  isLoading$: Observable<boolean>;\n  private authData$$: BehaviorSubject<AuthData>;\n  private isLoading$$: BehaviorSubject<boolean>;\n\n  constructor(\n    private authApiService: AuthApiService,\n    private router: Router,\n  ) {\n    const authData = localStorage.getItem('authData');\n\n    this.authData$$ = new BehaviorSubject<AuthData>(authData ? JSON.parse(authData) : null);\n    this.authData$ = this.authData$$.asObservable();\n\n    this.isLoading$$ = new BehaviorSubject<boolean>(false);\n    this.isLoading$ = this.isLoading$$.asObservable();\n  }\n\n  get authDataValue(): AuthData {\n    return this.authData$$.value;\n  }\n\n  login(user: User): Observable<AuthData> {\n    this.isLoading$$.next(true);\n\n    return this.authApiService.login(user)\n      .pipe(\n        map(({ data }: ApiResponse<AuthData>) => {\n          localStorage.setItem('authData', JSON.stringify(data));\n          this.authData$$.next(data);\n\n          return data;\n        }),\n        tap(() => this.isLoading$$.next(false)),\n        catchError((err: any) => {\n          this.isLoading$$.next(false);\n\n          return throwError(err);\n        })\n      );\n  }\n\n  logout(): void {\n    // remove user from local storage to log user out\n    localStorage.removeItem('authData');\n    this.authData$$.next(null);\n\n    this.router.navigate([ 'auth', 'login' ]);\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../../auth/services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private authService: AuthService,\n    private toastrService: ToastrService,\n  ) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError(err => {\n        if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.authService.logout();\n        }\n        const error = err.error.message || err.statusText;\n        const defaultErrorMessage = 'Sorry, but something went wrong, please try again.';\n\n        this.toastrService.error(defaultErrorMessage);\n\n        return throwError(error);\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../services';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!environment.isAuthorizationEnabled) {\n      return true;\n    }\n\n    const user = this.authService.authDataValue;\n    if (user) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate([ 'auth', 'login' ], { queryParams: { returnUrl: state.url } });\n\n    return false;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport {\n  BurgerButtonComponent,\n  ButtonComponent,\n  InputComponent,\n  LoaderComponent,\n  QuoteEditFormComponent,\n  QuoteTagComponent,\n  TableComponent,\n  TextAreaComponent } from './components';\nimport { TemplateDirective } from './directives';\n\nconst COMPONENTS = [\n  TableComponent,\n  ButtonComponent,\n  InputComponent,\n  TextAreaComponent,\n  LoaderComponent,\n  QuoteEditFormComponent,\n  QuoteTagComponent,\n  BurgerButtonComponent,\n];\n\nconst DIRECTIVES = [\n  TemplateDirective,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n    ...DIRECTIVES,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    ...COMPONENTS,\n    ...DIRECTIVES,\n\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class SharedModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { User } from '../auth/models/auth.model';\nimport { ApiResponse, AuthData } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthApiService {\n  private apiBase: string = environment.apiUrls.auth;\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  login<T = AuthData>(user: User): Observable<ApiResponse<T>> {\n    const url = `${ this.apiBase }/login`;\n\n    return this.http.post<ApiResponse<T>>(url, user);\n  }\n\n  logout(): Observable<ApiResponse<any>> {\n    const url = `${ this.apiBase }/logout`;\n\n    return this.http.get<ApiResponse<any>>(url);\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Quote } from '../../../models';\nimport { QuoteTagComponent } from '../quote-tag/quote-tag.component';\n\n@Component({\n  selector: 'app-quote-edit-form',\n  templateUrl: './quote-edit-form.component.html',\n  styleUrls: [ './quote-edit-form.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteEditFormComponent implements OnInit {\n  @ViewChild('quoteTags', { static: false }) quoteTags: QuoteTagComponent;\n  @Output() submitted = new EventEmitter<Quote>();\n\n  @Input() initialData: Quote = {\n    author: '',\n    text: '',\n    source: '',\n    tags: '',\n  } as Quote;\n\n  editQuoteForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.editQuoteForm = this.fb.group({\n      [ 'author' ]: new FormControl(this.initialData.author, [ Validators.required ]),\n      [ 'text' ]: new FormControl(this.initialData.text, [ Validators.required ]),\n      [ 'source' ]: new FormControl(this.initialData.source, [ Validators.required ]),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.editQuoteForm.invalid) {\n      return;\n    }\n\n    this.submitted.emit({\n      ...this.initialData,\n      ...this.editQuoteForm.value,\n      tags: this.quoteTags.getValue,\n    });\n  }\n\n}\n","<form [formGroup]=\"editQuoteForm\" class=\"edit-form\">\n  <app-input\n    label=\"Author*\"\n    [id]=\"'author'\"\n    [form]=\"editQuoteForm\"\n  >\n  </app-input>\n\n  <app-input\n    label=\"Source*\"\n    [id]=\"'source'\"\n    [form]=\"editQuoteForm\"\n  >\n  </app-input>\n\n\n  <app-text-area\n    label=\"Text*\"\n    [id]=\"'text'\"\n    [form]=\"editQuoteForm\"\n  >\n  </app-text-area>\n  <app-quote-tag\n    #quoteTags\n    [initialData]=\"initialData.tags\"\n  >\n  </app-quote-tag>\n\n  <app-button\n    type=\"submit\"\n    [label]=\"'Submit'\"\n    [disabled]=\"editQuoteForm.invalid\"\n    (clicked)=\"onSubmit()\"\n  ></app-button>\n</form>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: [ './input.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputComponent implements OnInit {\n  @Output() clear = new EventEmitter<string>();\n\n  @Input() placeholder = '';\n  @Input() label = '';\n  @Input() hasClearButton = false;\n  @Input() form: FormGroup;\n  @Input() type: string;\n  @Input() id: string;\n\n  control: FormControl;\n\n  ngOnInit(): void {\n    this.control = this.form.get(this.id) as FormControl;\n  }\n\n  clearButtonClicked(): void {\n    this.clear.emit(this.id);\n  }\n}\n","<ng-container [formGroup]=\"form\">\n  <label>\n    <span class=\"label-text\">{{ label }}</span>\n    <input\n      class=\"app-input\"\n      [class.invalid]=\"form.controls[ id ].invalid && form.controls[ id ].touched\"\n      [type]=\"type\"\n      [formControl]=\"control\"\n      [placeholder]=\"placeholder\"\n    />\n    <button\n      class=\"clear-button\"\n      *ngIf=\"hasClearButton\"\n      (click)=\"clearButtonClicked()\"\n    >\n      x\n    </button>\n  </label>\n</ng-container>\n","import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'ng-template[name]',\n})\nexport class TemplateDirective {\n  @Input() name: string;\n\n  constructor(\n    public template: TemplateRef<any>,\n  ) { }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  title = 'quoteApp';\n}\n","<router-outlet></router-outlet>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: [ './button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent implements OnInit {\n  @Input() label: string;\n  @Input() type = 'button';\n  @Input() disabled?: boolean;\n  @Input() class?: string;\n\n  @Output() clicked = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  ngOnInit(): void {\n  }\n\n  onClick(event: MouseEvent | KeyboardEvent): void {\n    this.clicked.next(event);\n  }\n\n}\n","<button\n  class=\"app-button\"\n  [class]=\"class\"\n  [disabled]=\"disabled\"\n  [type]=\"type\"\n  (click)=\"onClick($event)\"\n>\n  <span *ngIf=\"label\" class=\"app-button__text\">{{ label }}</span>\n</button>\n","export * from './private-layout/private-layout.component';\nexport * from './auth-layout/auth-layout.component';\nexport * from './navigation/navigation.component';\n","import { ChangeDetectionStrategy, Component, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { environment } from '../../../../environments/environment';\nimport { TemplateDirective } from '../../directives';\nimport { TableDataSource, TableHeadColumns } from './table.models';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: [ './table.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent {\n  @ContentChildren(TemplateDirective) set contentChildren(queryList: QueryList<TemplateDirective>) {\n    if (!queryList.length) {\n      return;\n    }\n\n    this.templateRefList = queryList.toArray().reduce(\n      (buf: any, templateDirective: TemplateDirective) => ({\n        ...buf,\n        [ templateDirective.name ]: templateDirective.template,\n      }), {});\n  }\n  templateRefList: any;\n\n  @Input() tableData: TableDataSource[] = [];\n  @Input() columns: TableHeadColumns[] = [];\n\n  isApiProvided = environment.apiUrls.quote;\n}\n","<table>\n  <tr>\n    <th *ngFor=\"let column of columns\">{{ column.label }}</th>\n  </tr>\n  <tr *ngFor=\"let data of tableData\">\n    <ng-container *ngFor=\"let column of columns\">\n      <td *ngIf=\"data[ column.key ]?.value as value\">\n        {{ value }}\n      </td>\n    </ng-container>\n    <td *ngIf=\"isApiProvided\">\n      <ng-container\n        [ngTemplateOutletContext]=\"{ $implicit: data }\"\n        [ngTemplateOutlet]=\"controlButtons\"\n      >\n      </ng-container>\n    </td>\n  </tr>\n  <tr class=\"no-data-tr\">\n    <td [colSpan]=\"columns.length\" *ngIf=\"!tableData || !tableData.length\">\n      No data found.\n    </td>\n  </tr>\n</table>\n\n<ng-template #controlButtons let-row>\n  <ng-container\n    [ngTemplateOutlet]=\"templateRefList[ 'control-cell' ]\"\n    [ngTemplateOutletContext]=\"{ $implicit: row }\"\n  ></ng-container>\n</ng-template>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgxSmartModalModule } from 'ngx-smart-modal';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule,\n    NgxSmartModalModule.forRoot(),\n    ToastrModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ],\n})\nexport class AppModule { }\n","import { AfterViewInit, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\n\nimport { filter, tap } from 'rxjs/operators';\n\nimport { AuthService } from '../../../auth/services';\n\n@Component({\n  selector: 'app-private-layout',\n  templateUrl: './private-layout.component.html',\n  styleUrls: [ './private-layout.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrivateLayoutComponent implements AfterViewInit {\n  opened = false;\n  isAnimated = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.listenOnRouteChange();\n    this.authService.authData$.subscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.isAnimated = true;\n  }\n\n  toggleSidebar() {\n    this.opened = !this.opened;\n  }\n\n  private listenOnRouteChange() {\n    this.router.events.pipe(\n      filter((event: RouterEvent) => event instanceof NavigationEnd),\n      tap(() => {\n        this.opened = false;\n      }),\n    ).subscribe();\n  }\n}\n","<ng-sidebar-container>\n  <ng-sidebar\n    position=\"right\"\n    showBackdrop=\"true\"\n    [animate]=\"isAnimated\"\n    [(opened)]=\"opened\"\n  >\n    <button class=\"close-sidebar\" (click)=\"toggleSidebar()\"></button>\n    <app-navigation></app-navigation>\n  </ng-sidebar>\n\n  <div ng-sidebar-content>\n    <header>\n      <h1 class=\"logo\"></h1>\n      <app-navigation></app-navigation>\n      <app-burger-button (clicked)=\"toggleSidebar()\"></app-burger-button>\n    </header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</ng-sidebar-container>\n","export * from './auth.service';\n","export enum RoutesPaths {\n  root = '/',\n  quotes = 'quotes',\n  auth = 'auth',\n  new = 'new',\n  edit = 'edit',\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-burger-button',\n  templateUrl: './burger-button.component.html',\n  styleUrls: [ './burger-button.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BurgerButtonComponent {\n  @Output() clicked = new EventEmitter<MouseEvent | KeyboardEvent>();\n\n  onClick(): void {\n    this.clicked.emit();\n  }\n}\n","<button (click)=\"onClick()\"></button>\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from '../../auth/services';\n\n@Injectable()\nexport class BasicAuthInterceptor implements HttpInterceptor {\n  private apiBase: string = environment.apiUrls.quote;\n  private apiShare: string = environment.apiUrls.share;\n  private isAuthorizationEnable: boolean = environment.isAuthorizationEnabled;\n\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isAuthorizationEnable) {\n      return next.handle(request);\n    }\n\n    const authData = this.authService.authDataValue;\n    const isLoggedIn = authData && authData.access_token;\n    const isApiUrl = request.url.startsWith(this.apiBase) || request.url.startsWith(this.apiShare);\n\n    if (isLoggedIn && isApiUrl) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Basic ${authData.access_token}`,\n        },\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { FormGroup } from '@angular/forms';\n\nimport * as uuid from 'uuid';\n\nimport { QuoteTag } from './quote-tag.models';\n\nexport function generateUniqueId(): string {\n  return uuid.v4();\n}\n\nexport function getTagsArrayFromString(tags: string, separator: string = ', '): QuoteTag[] {\n  return tags.split(separator).map((tag: string) => ({\n    id: generateUniqueId(),\n    value: tag,\n  }));\n}\n\nexport function getFormattedTagsFromFormValue(tagForm: FormGroup, separator: string = ', '): string {\n  return Object.entries(tagForm.value)\n    .filter(([ _, value ]) => !!value)\n    .map(([ _, value ]) => (value as string).replace(/,/g, ''))\n    .join(separator);\n}\n","import { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SidebarModule } from 'ng-sidebar';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthLayoutComponent, NavigationComponent, PrivateLayoutComponent } from './components';\nimport { BasicAuthInterceptor } from './interceptors/basic-auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\n\nconst COMPONENTS = [\n  PrivateLayoutComponent,\n  AuthLayoutComponent,\n  NavigationComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...COMPONENTS,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BasicAuthInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    SidebarModule.forRoot(),\n  ],\n  exports: [\n    ...COMPONENTS,\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable({ providedIn: 'root' })\nexport class LoginPageGuard implements CanActivate {\n  constructor(\n    private router: Router,\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!environment.isAuthorizationEnabled) {\n      this.router.navigate([ '/' ]);\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { environment } from '../../../../environments/environment';\nimport { APP_NAVIGATION_CONFIG } from '../../../app-navigation.config';\nimport { AuthService } from '../../../auth/services';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: [ './navigation.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  navigationItems = APP_NAVIGATION_CONFIG;\n  isAuthenticated = !!this.authService.authDataValue;\n  isAuthorizationEnable = environment.isAuthorizationEnabled;\n\n  constructor(\n    private authService: AuthService,\n  ) {}\n\n  logout(): void {\n    this.authService.logout();\n  }\n\n}\n","<ul>\n  <ng-container *ngFor=\"let navigationItem of navigationItems\">\n    <li *ngIf=\"!navigationItem.isDisabled\">\n      <a [routerLink]=\"navigationItem.path\">{{ navigationItem.label }}</a>\n    </li>\n  </ng-container>\n  <li *ngIf=\"isAuthenticated && isAuthorizationEnable\"\n      class=\"logout\"\n  >\n    <app-button\n      label=\"Logout\"\n      (clicked)=\"logout()\"\n    >\n    </app-button>\n  </li>\n</ul>\n","import { environment } from '../environments/environment';\nimport { RoutesPaths } from './app-routing.config';\nimport { NavigationItem } from './core/components/navigation/navigation.models';\n\nexport const APP_NAVIGATION_CONFIG: NavigationItem[] = [\n  {\n    label: 'Home',\n    path: [ RoutesPaths.root ],\n  },\n  {\n    label: 'Quotes list',\n    path: [ RoutesPaths.quotes ],\n  },\n  {\n    label: 'Add quote',\n    path: [ RoutesPaths.quotes, RoutesPaths.new ],\n    isDisabled: !environment.apiUrls.quote,\n  },\n];\n","export * from './auth.guard';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { RoutesPaths } from './app-routing.config';\nimport { AuthGuard } from './auth/guards';\nimport { LoginPageGuard } from './auth/guards/login-page.guard';\nimport { AuthLayoutComponent, PrivateLayoutComponent } from './core/components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      {\n        path: '',\n        canActivate: [ AuthGuard ],\n        component: PrivateLayoutComponent,\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./quote/quote.module').then(m => m.QuoteModule),\n          },\n          {\n            path: RoutesPaths.quotes,\n            children: [\n              {\n                path: '',\n                loadChildren: () => import('./quotes-list/quotes-list.module').then(m => m.QuotesListModule),\n              },\n              {\n                path: '',\n                loadChildren: () => import('./quote-edit/quote-edit.module').then(m => m.QuoteEditModule),\n              },\n              {\n                path: '',\n                loadChildren: () => import('./quote-new/quote-new.module').then(m => m.QuoteNewModule),\n              },\n            ],\n\n          },\n        ],\n      },\n      {\n        path: RoutesPaths.auth,\n        component: AuthLayoutComponent,\n        canActivate: [ LoginPageGuard ],\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule),\n          },\n        ],\n      },\n      {\n        path: '**',\n        redirectTo: '',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","export * from './template.directive';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { QuoteTag } from './quote-tag.models';\nimport { generateUniqueId, getFormattedTagsFromFormValue, getTagsArrayFromString } from './quote-tag.models-rules';\n\n@Component({\n  selector: 'app-quote-tag',\n  templateUrl: './quote-tag.component.html',\n  styleUrls: [ './quote-tag.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuoteTagComponent implements OnInit {\n  @Input() initialData: string;\n\n  form: FormGroup;\n  tags: QuoteTag[] = [];\n\n  get getValue() {\n    return getFormattedTagsFromFormValue(this.form);\n  }\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n    this.tags = getTagsArrayFromString(this.initialData);\n\n    this.form = this.fb.group({});\n\n    this.tags.forEach((tag: QuoteTag) => {\n      this.form.addControl(tag.id, new FormControl(tag.value));\n    });\n  }\n\n  addTag(): void {\n    const uniqueId = generateUniqueId();\n    this.form.addControl(uniqueId, new FormControl(''));\n\n    this.tags.push({\n      id: uniqueId,\n      value: '',\n    });\n  }\n\n  deleteTagById(id: string): void {\n    const index = this.tags.findIndex((tag: QuoteTag) => tag.id === id);\n\n    if (index !== -1) {\n      this.tags.splice(index, 1);\n      this.form.removeControl(id);\n    }\n  }\n\n}\n","<span class=\"label-text\" *ngIf=\"tags.length\">Tags</span>\n<div [formGroup]=\"form\">\n  <ng-container>\n    <app-input\n      *ngFor=\"let tag of tags\"\n      [hasClearButton]=\"true\"\n      [id]=\"tag.id\"\n      [form]=\"form\"\n      (clear)=\"deleteTagById($event)\"\n    >\n    </app-input>\n\n    <app-button\n      label=\"Add new tag\"\n      (clicked)=\"addTag()\"\n    >\n    </app-button>\n  </ng-container>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}